name: Run QA Tests

on:
  workflow_dispatch:
    inputs:
      excel_file:
        description: 'Path to the Excel file containing URLs'
        required: true
        default: 'input.xlsx'
      capture_video:
        description: 'Capture video for each test run? (true/false)'
        required: false
        default: 'false'
      initiator:
        description: 'Who initiated this run?'
        required: true
        default: 'github-action'

jobs:
  run-qa-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run QA tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}
          VERCEL_URL: 'qa-automation-tool.vercel.app'
          INITIATOR: ${{ github.event.inputs.initiator }}
        run: |
          node api/qa-test.js ${{ github.event.inputs.excel_file }} output.xlsx "${{ github.event.inputs.initiator }}" ${{ github.event.inputs.capture_video }}

      - name: Upload results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qa-test-results
          path: output.xlsx

      - name: Send summary to Vercel
        if: success() || failure()
        env:
          VERCEL_URL: 'https://qa-automation-tool.vercel.app'
        run: |
          if [ ! -f summary.json ]; then
            echo "summary.json not found. Skipping sending summary to Vercel."
            exit 0
          fi
          echo "Sending summary to Vercel endpoint: $VERCEL_URL/api/store-run"
          PAYLOAD=$(jq -c \
            --arg runId "${{ github.run_id }}" \
            --arg crawlName "QA Run ${{ github.run_id }}" \
            --arg initiator "${{ env.INITIATOR }}" \
            '. + {runId: $runId, crawlName: $crawlName, initiator: $initiator}' \
            summary.json)
          echo "Payload:"
          echo "$PAYLOAD" | jq .
          curl -X POST "$VERCEL_URL/api/store-run" \
               -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               --fail \
               --show-error