name: Run QA now
on:
  workflow_dispatch:
    inputs:
      passphrase:
        description: Secret phrase
        required: true
      asset_id:
        description: ID of draft‑release asset (input.xlsx)
        required: true
      release_id:
        description: ID of the draft release
        required: true

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
    - name: Validate pass‑phrase
      run: |
        if [ "${{ inputs.passphrase }}" != "${{ secrets.QA_PASSPHRASE }}" ]; then
          echo "::error ::Incorrect pass‑phrase"; exit 1; fi

    - uses: actions/checkout@v4

    - name: Install deps
      run: npm ci

    # 1️⃣ download the XLSX -----------------------------------------------
    - name: Download input asset
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        curl -L \
          -H "Authorization: Bearer $GH_PAT" \
          -H "Accept: application/octet-stream" \
          "https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ inputs.asset_id }}" \
          -o input.xlsx

    # 2️⃣ run the crawler --------------------------------------------------
    - name: Run QA
      run: node qa-test.js input.xlsx

    # 3️⃣ upload results ---------------------------------------------------
    - uses: actions/upload-artifact@v4
      with:
        name: results-${{ github.run_id }}
        path: results-*.xlsx

    # 4️⃣ clean up the temp release ---------------------------------------
    - name: Delete temp release + asset
      if: always()
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        # delete release (also deletes asset)
        curl -X DELETE \
          -H "Authorization: Bearer $GH_PAT" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ inputs.release_id }}"

    - name: List files in workspace
      run: ls -l

    - name: Check input.xlsx exists
      run: file input.xlsx

    - name: Debug XLSX
      run: |
        node -e "
          import XLSX from 'xlsx';
          const wb = XLSX.readFile('input.xlsx');
          console.log('Sheet names:', wb.SheetNames);
          console.log('First 5 rows:', XLSX.utils.sheet_to_json(wb.Sheets.URLs).slice(0,5));
        "
    - name: Enhanced Debug XLSX
      run: node debug-xlsx.js input.xlsx