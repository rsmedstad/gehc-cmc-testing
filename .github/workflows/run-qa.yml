name: Run QA Tests

on:
  schedule:
    - cron: '0 */3 * * *'  # Runs every 3 hours
  workflow_dispatch:
    inputs:
      initiator:
        description: 'Name of the person initiating the test'
        required: true
      file_url:
        description: 'URL to the input.xlsx file'
        required: true
      passphrase:
        description: 'Secret phrase'
        required: true

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Validate pass-phrase for manual runs
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ inputs.passphrase }}" != "${{ secrets.QA_PASSPHRASE }}" ]; then
            echo "::error ::Incorrect pass-phrase"; exit 1; fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Download input file for ad-hoc run
        if: github.event_name == 'workflow_dispatch'
        run: |
          curl -L -o input.xlsx "${{ inputs.file_url }}"

      - name: Set initiator
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "INITIATOR=scheduled" >> $GITHUB_ENV
          else
            echo "INITIATOR=${{ inputs.initiator }}" >> $GITHUB_ENV
          fi

      - name: Run QA test
        run: |
          node api/qa-test.js input.xlsx results-${{ github.run_id }}.xlsx "${{ env.INITIATOR }}"

      - name: Capture test summary
        run: |
          SUMMARY=$(tail -n 1 results.txt)
          echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV

      - name: Send summary to Vercel
        env:
          VERCEL_URL: "https://gehc-cmc-testing.vercel.app"  # Replace with your Vercel app URL
        run: |
          curl -X POST "$VERCEL_URL/api/store-run" \
               -H "Content-Type: application/json" \
               -d '{
                 "runId": "${{ github.run_id }}",
                 "crawlName": "QA Run ${{ github.run_id }}",
                 "date": "${{ github.event.head_commit.timestamp || github.event.workflow_run.created_at }}",
                 "successCount": '"$(echo $SUMMARY | jq '.success')"',
                 "failureCount": '"$(echo $SUMMARY | jq '.failure')"',
                 "initiator": "${{ env.INITIATOR }}"
               }'

      - name: Upload results artifact
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.run_id }}
          path: results-*.xlsx

      - name: Upload screenshots artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ github.run_id }}
          path: screenshots/*.png

      - name: Log artifact name
        run: |
          echo "Results artifact uploaded as: results-${{ github.run_id }}"